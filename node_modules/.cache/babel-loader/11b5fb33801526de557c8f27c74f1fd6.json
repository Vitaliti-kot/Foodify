{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\step7\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Foodify\\\\foodify\\\\src\\\\Components\\\\Rrecipe.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Rrecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.themealdb.com/api/json/v1/1/random.php\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.meals\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.strMeal\n        }, items.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/step7/OneDrive/Рабочий стол/Foodify/foodify/src/Components/Rrecipe.js"],"names":["React","Component","render","Rrecipe","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","meals","message","map","item","strMeal","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAA+B;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAELC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAGKG,MAAD,IAAU;AACN,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAACM,MAAM,CAACE;AAFH,OAAd;AAIH,KARL,EASKV,KAAD,IAAS;AACL,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAdL;AAgBH;;AAEDL,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACK,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAAyB,KAAKH,KAApC;;AACA,QAAGC,KAAH,EAAS;AACL,0BAAO;AAAA,6BAAUA,KAAK,CAACW,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEM,IAAG,CAACV,QAAJ,EAAa;AACf,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFK,MAED;AACD,0BACI;AAAA,kBACKC,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACX;AAAA,oBACKA,IAAI,CAACC;AADV,WAASZ,KAAK,CAACa,IAAf;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AASH;AACJ;;AA9C6C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nexport default class Rrecipe extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\ncomponentDidMount(){\r\n    fetch(\"https://www.themealdb.com/api/json/v1/1/random.php\")\r\n    .then(res=>res.json())\r\n    .then(\r\n        (result)=>{\r\n            this.setState({\r\n                isLoaded: true,\r\n                items:result.meals\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                isLoaded: true,\r\n                error\r\n            });\r\n        }\r\n    )\r\n}\r\n\r\nrender(){\r\n    const {error, isLoaded, items}=this.state;\r\n    if(error){\r\n        return <p>Error {error.message}</p>\r\n    }else if(!isLoaded){\r\n        return <p>Loading...</p>\r\n    }else{\r\n        return(\r\n            <ul>\r\n                {items.map(item=>(\r\n                    <li key={items.name}>\r\n                        {item.strMeal}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}